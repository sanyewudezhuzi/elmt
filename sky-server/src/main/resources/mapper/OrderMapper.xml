<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sky.mapper.OrderMapper">

    <!--保存订单-->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into orders(number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount, remark,
                           phone, address, consignee, estimated_delivery_time, delivery_status, pack_amount, tableware_number,
                           tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee},
                #{estimatedDeliveryTime}, #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>

    <!--修改订单信息-->
    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--查询历史订单-->
    <select id="historyOrders" resultType="com.sky.entity.Orders">
        select id,
        number,
        status,
        user_id,
        address_book_id,
        order_time,
        checkout_time,
        pay_method,
        pay_status,
        amount,
        remark,
        phone,
        address,
        user_name,
        consignee,
        cancel_reason,
        rejection_reason,
        cancel_time,
        estimated_delivery_time,
        delivery_status,
        delivery_time,
        pack_amount,
        tableware_number,
        tableware_status
        from orders
        <where>
            <if test="number != null">
                number = #{number}
            </if>
            <if test="phone != null">
                and phone = #{phone}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time >= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        order by order_time desc
    </select>

    <!--根据id查询订单-->
    <select id="getOrderById" resultType="com.sky.entity.Orders">
        select id,
               number,
               status,
               user_id,
               address_book_id,
               order_time,
               checkout_time,
               pay_method,
               pay_status,
               amount,
               remark,
               phone,
               address,
               user_name,
               consignee,
               cancel_reason,
               rejection_reason,
               cancel_time,
               estimated_delivery_time,
               delivery_status,
               delivery_time,
               pack_amount,
               tableware_number,
               tableware_status
        from orders
        where id = #{orderId}
    </select>

    <!--按状态获取个数-->
    <select id="getCountGroupByStatus" resultType="Integer">
        select count(*)
        from orders
        where status = #{status}
    </select>

</mapper>